// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel UpdateCells

RWTexture2D<float4> Texture;

uint width;
uint height;
uint numColls;
uint numRows;
uint cellWidth;
uint cellHeight;
uint numCells;
bool grid;

RWStructuredBuffer<float4> cells;

/**
 * \brief Transforms the position of the texel to the cell in the array
 * \param id Texel(x,y)
 */
[numthreads(8,8,1)]
void UpdateCells(uint3 id : SV_DispatchThreadID)
{
    // Column
    int x = floor(id.x/cellWidth);
    // Row
    int y = numRows - 1 - floor(id.y/cellHeight);

    // Position in array
    int pos = x + y*numColls;

    // Check if position is out of the array
    bool offMemory = !(pos >= numCells);
    // Check if is close to the border of the cell
    bool gridCheck = !((id.x % cellWidth < 10 || id.y % cellHeight < 10) && grid);

    // Paint color of cell in that position
    // If close to the border of cell paint it black
    // If out of memory paints it white
    Texture[id.xy] = (cells[pos] * gridCheck ) * offMemory + 1 * !offMemory ;
}