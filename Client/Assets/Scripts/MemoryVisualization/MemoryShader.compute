// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel UpdateCells

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

RWTexture2D<float4> Texture;

uint width;
uint height;
uint numColls;
uint cellWidth;
bool grid;

RWStructuredBuffer<float4> cells;

uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

[numthreads(8,8,1)]
void UpdateCells(uint3 id : SV_DispatchThreadID)
{
    int x = numColls - 1 -floor(id.x/cellWidth);
    int y = (id.y/cellWidth) * numColls;
    Texture[id.xy] = cells[x+y] - (1 * (id.x % cellWidth < 5 || id.y % cellWidth < 5)) * grid;
    Texture[id.xy] += (1 * (id.x < 5 || id.x > width - 5 || id.y < 5 || id.y > height - 5 )) * !grid;
}