// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel UpdateCells

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

RWTexture2D<float4> Texture;

uint width;
uint height;
uint numColls;
uint numRows;
uint cellWidth;
uint cellHeight;
uint numCells;
bool grid;

RWStructuredBuffer<float4> cells;

uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

[numthreads(8,8,1)]
void UpdateCells(uint3 id : SV_DispatchThreadID)
{
    int x = floor(id.x/cellWidth);
    int y = numRows - 1 - floor(id.y/cellHeight);

    int pos = x + y*numColls;

    bool offMemory = !(pos >= numCells);
    bool gridCheck = !((id.x % cellWidth < 10 || id.y % cellHeight < 10) && grid);
    
    Texture[id.xy] = (cells[pos] * gridCheck ) * offMemory + 1 * !offMemory ;
}